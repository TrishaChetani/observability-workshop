version: '3'
services:

## Domain

  imageholder:
    image: ${DOCKER_REGISTRY}/${GROUP}/imageholder:${IMAGEHOLDER_VERSION}
    depends_on:
    - mongodb
    - fluentd
    environment:
      SERVICE_CHECK_HTTP: ':8080/health'
    ports:
    - 8080:8080
    # the logdriver is being resolved by the daemon which has no access to the docker network dns
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        tag: httpd.access


## Logging

# log collector
  fluentd:
    build: ../../../../fluentd
    links:
      - elasticsearch
    ports:
      - 24224:24224
      - 24224:24224/udp
    logging:
        driver: "json-file"
        options:
            max-size: 100m
            max-file: "5"
    #image: ${DOCKER_REGISTRY}/${GROUP}/fluentd:${FLUENTD_VERSION}

# search engine
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.1

# logs visualizer
  kibana:
    image: docker.elastic.co/kibana/kibana:6.1.1
    links:
      - elasticsearch
    ports:
      - 5601:5601


## Monitoring

# metrics collector
  prometheus:
    build: ../../../../prometheus
    ports:
      - 9090:9090
    #image: ${DOCKER_REGISTRY}/${GROUP}/prometheus:${PROMETHEUS_VERSION}

# monitoring visualizer
  grafana:
    ports:
      - 3000:3000
    image: grafana/grafana

# node metrics exporter for prometheus
  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100

# docker daemon metrics exporter for prometheus
  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080

## Storage

# database
  mongodb:
    image: mongo:${MONGODB_VERSION}
    ports:
    - 27017