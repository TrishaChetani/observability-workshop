<source>
  @type forward
  port 24224
  bind 0.0.0.0
</source>

<source>
  @type prometheus
</source>
<source>
  @type monitor_agent
</source>
<source>
  @type prometheus_monitor
  <labels>
    host ${hostname}
  </labels>
</source>

# write log to message field
<filter *.**>
  @type record_transformer
  <record>
    message ${record["log"]}
    tag "${tag}"
  </record>
</filter>

# properly format mongodb logs
<filter *.**>
  @type parser
  format /[^ ]+ [^ ]+ (?<level>[^ ]+)  \[(?<logger_name>[^ ]+)\] (?<message>.+)$/
  key_name message
  reserve_data true
</filter>

# properly format frontend logs
<filter *.**>
  @type parser
  format nginx
  key_name message
  reserve_data true
</filter>

# write part of container name to service field
<filter *.**>
  @type parser
  format /.+_(?<service>[^_]+)_1$/
  key_name container_name
  reserve_data true
</filter>

# remove starting / from container name
<filter *.**>
  @type parser
  format /\/(?<container_name>.+)$/
  key_name container_name
  reserve_data true
</filter>

# parse log field as json
<filter *.**>
  @type parser
  format json
  key_name log
  reserve_data true
</filter>

# remove all events from fluentd
<filter *.**>
  @type grep
  <exclude>
    key tag
    pattern fluent.*
  </exclude>
</filter>

# remove tag field & log field (it is either in message now or parsed)
<filter *.**>
  @type record_transformer
  remove_keys log,tag
</filter>

<match *.**>
  @type copy
  <store>
    @type elasticsearch
    host elasticsearch
    port 9200
    logstash_format true
    logstash_prefix fluentd
    logstash_dateformat %Y%m%d
    include_tag_key true
    type_name access_log
    tag_key @log_name
    flush_interval 1s
  </store>
  <store>
    @type stdout
  </store>
  # <store>
  #   @type honeycomb
  #   writekey "<secret key>"
  #   dataset "observability-workshop"
  # </store>
</match>