version: '2.1'
services:

  ## Domain
  frontend:
    build: ../application/frontend
    depends_on:
      - fluentd
    ports:
      - 80:80
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imageorchestrator:
    build: ../application/imageorchestrator
    depends_on:
    - fluentd
    ports:
    - 8080:8080
    mem_limit: 2g
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
      - APM_ENABLED=false
      - HONEYCOMB_ENABLED
      - SPRING_PROFILES_ACTIVE=json-log
      - EVENTS_ENABLED=true
      - BUSINESS_METRICS_ENABLED=true
      - TRACING_TAGS_ENABLED=false
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imageholder:
    build: ../application/imageholder
    depends_on:
    - mongodb
    - fluentd
    ports:
    - 8081:8080
    mem_limit: 1g
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
      - APM_ENABLED=false
      - HONEYCOMB_ENABLED
      - SPRING_PROFILES_ACTIVE=json-log
      - EVENTS_ENABLED=true
      - BUSINESS_METRICS_ENABLED=true
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imagerotator:
    build: ../application/imagerotator
    depends_on:
      - fluentd
    ports:
      - 8082:8080
    mem_limit: 2g
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
      - APM_ENABLED=false
      - HONEYCOMB_ENABLED
      - SPRING_PROFILES_ACTIVE=json-log
      - EVENTS_ENABLED=true
      - BUSINESS_METRICS_ENABLED=true
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imagegrayscale:
    build: ../application/imagegrayscale
    depends_on:
      - fluentd
    ports:
      - 8083:8080
    mem_limit: 2g
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
      - APM_ENABLED=false
      - HONEYCOMB_ENABLED
      - SPRING_PROFILES_ACTIVE=json-log
      - EVENTS_ENABLED=true
      - BUSINESS_METRICS_ENABLED=true
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imageresize:
    build: ../application/imageresize
    depends_on:
      - fluentd
    ports:
      - 8084:8080
    mem_limit: 2g
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
      - APM_ENABLED=false
      - HONEYCOMB_ENABLED
      - SPRING_PROFILES_ACTIVE=json-log
      - EVENTS_ENABLED=true
      - BUSINESS_METRICS_ENABLED=true
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imageflip:
    build: ../application/imageflip
    depends_on:
      - fluentd
    ports:
      - 8085:8080
    mem_limit: 2g
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
      - APM_ENABLED=false
      - HONEYCOMB_ENABLED
      - SPRING_PROFILES_ACTIVE=json-log
      - EVENTS_ENABLED=true
      - BUSINESS_METRICS_ENABLED=true
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  imagethumbnail:
    build: ../application/imagethumbnail
    depends_on:
      - fluentd
    ports:
      - 8080
    mem_limit: 4g
    environment:
      - HONEYCOMB_KEY=${HONEYCOMB_KEY}
      - APM_ENABLED=false
      - HONEYCOMB_ENABLED
      - SPRING_PROFILES_ACTIVE=json-log
      - EVENTS_ENABLED=true
      - BUSINESS_METRICS_ENABLED=true
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  traffic-gen:
    build: ../infrastructure/traffic-gen
    depends_on:
    - fluentd
    - imageholder
    - imageorchestrator
    restart: on-failure
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  ## Storage

  # database
  mongodb:
    image: mongo:3.2.12

    # See https://github.com/docker-library/docs/tree/master/mongo#setting-wiredtiger-cache-size-limits
    command: "--wiredTigerCacheSizeGB 2"
    depends_on:
    - fluentd
    ports:
    - '27017'
    volumes:
    - olly-mongodb:/data/db
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224

  mongodb-exporter:
    image: maibornwolff/mongodb_exporter
    ports:
    - 9001:9001
    command: '-mongodb.uri mongodb://mongodb:27017'

  ## Logging

  # log collector
  fluentd:
    build: ../infrastructure/fluentd
    command: -qq
    depends_on:
    - elasticsearch
    volumes:
    - /var/lib/docker/containers/:/mnt/var/log/docker/containers/:ro
    - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
    - "24224:24224"
    - "24224:24224/udp"

  loki:
    image: grafana/loki:v1.2.0
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml

  # search engine, storage
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.1
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - LimitMEMLOCK=infinity
      #- "ES_JAVA_OPTS=-Xms1g -Xmx1g -Des.enforce.bootstrap.checks=true"
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=changeme
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
    - olly-elasticsearch:/usr/share/elasticsearch/data
    ports:
    - 9200:9200

  elasticsearch-exporter:
    image: justwatch/elasticsearch_exporter:1.0.2
    depends_on:
      - elasticsearch
    command:
     - '-es.uri=http://elasticsearch:9200'
    restart: always
    ports:
    - 9108:9108

  kibana-index:
    build: ../infrastructure/kibana-index
    depends_on:
    - kibana
    - elasticsearch
    restart: on-failure

  # logs visualizer
  kibana:
    build: ../infrastructure/kibana
    depends_on:
    - elasticsearch
    volumes:
    - olly-prometheus:/prometheus
    ports:
    - 5601:5601

  ## Monitoring

  # metricbeat
  metricbeat:
    build: ../infrastructure/metricbeat
    user: root
    volumes:
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - olly-metricbeat:/usr/share/metricbeat/data
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - KIBANA_HOST=kibana
    # disable strict permission checks
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    depends_on:
      - kibana
      - elasticsearch


  heartbeat:
    build: ../infrastructure/heartbeat
    user: root
    # disable strict permission checks
    command: ["--strict.perms=false"]
    depends_on:
      - kibana
      - elasticsearch

  # metrics collector
  prometheus:
    build: ../infrastructure/prometheus
    ports:
    - 9090:9090

  # monitoring visualizer
  grafana:
    ports:
    - 3000:3000
    build: ../infrastructure/grafana

  # exporters
  node-exporter:
    image: prom/node-exporter
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
    command:
    - '--path.procfs=/host/proc'
    - '--path.sysfs=/host/sys'
    - --collector.filesystem.ignored-mount-points
    - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
    - 9100:9100

  cadvisor: # docker daemon metrics exporter
    image: google/cadvisor
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    ports:
    - 9110:8080
  
  nginx-exporter:
    image: sophos/nginx-vts-exporter:latest
    environment:
    - NGINX_STATUS="http://localhost/status/format/json"

volumes:
  olly-elasticsearch:
    driver: local
  olly-mongodb:
    driver: local
  olly-prometheus:
    driver: local
  olly-metricbeat:
    driver: local
